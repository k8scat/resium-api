"""
Django settings for resium project.

Generated by 'django-admin startproject' using Django 3.0.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""
import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import time

BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

ALLOWED_HOSTS = ["*"]

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "corsheaders",
    "downloader.apps.DownloaderConfig",
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    # 'django.middleware.csrf.CsrfViewMiddleware',
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "resium.middleware.CorsMiddleware",
]

ROOT_URLCONF = "resium.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "resium.wsgi.application"

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = "zh-hans"

TIME_ZONE = "Asia/Shanghai"

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/
STATIC_URL = "/static/"
# 用于 python manage.py collectstatic
STATIC_ROOT = os.path.join(BASE_DIR, "static")

# https://github.com/adamchainz/django-cors-headers
CORS_ALLOW_METHODS = [
    "DELETE",
    "GET",
    "OPTIONS",
    "PATCH",
    "POST",
    "PUT",
]
CORS_ALLOW_HEADERS = [
    "accept",
    "accept-encoding",
    "authorization",
    "content-type",
    "dnt",
    "origin",
    "user-agent",
    "x-csrftoken",
    "x-requested-with",
]
CORS_ORIGIN_ALLOW_ALL = True
# 暴露给前端的header
CORS_EXPOSE_HEADERS = ["Content-Disposition"]

REQUEST_TOKEN_HEADER = "Authorization"
REQUEST_TOKEN_PREFIX = "Bearer "

# 上传资源的存放目录
UPLOAD_DIR = os.path.join(BASE_DIR, "upload")
if not os.path.isdir(UPLOAD_DIR):
    os.makedirs(UPLOAD_DIR, exist_ok=True)

SWAGGER_SETTINGS = {
    "SECURITY_DEFINITIONS": {
        "Bearer": {"type": "apiKey", "name": "Authorization", "in": "header"}
    }
}

# 资源积分
WENKU_VIP_FREE_DOC_POINT = 10
WENKU_SHARE_DOC_POINT = 20
WENKU_SPECIAL_DOC_POINT = 20
CSDN_POINT = 10
DOCER_POINT = 10
OSS_RESOURCE_POINT = 10
ZHIWANG_POINT = 10
ARTICLE_POINT = 1
QIANTU_POINT = 10
DOC_CONVERT_POINT = 10
PUDN_POINT = 10
ITEYE_POINT = CSDN_POINT
MBZJ_POINT = 10

ZHIWANG_SCREENSHOT_IMAGE = os.path.join(BASE_DIR, "zhiwang_screenshot.png")
ZHIWANG_CODE_IMAGE = os.path.join(BASE_DIR, "zhiwang_code.png")
WENKU_SCREENSHOT_IMAGE = os.path.join(BASE_DIR, "wenku_screenshot.png")
WENKU_CODE_IMAGE = os.path.join(BASE_DIR, "wenku_code.png")

# 资源下载间隔, 单位s
DOWNLOAD_INTERVAL = 60
# 邮箱绑定链接的有效时间, 单位s
EMAIL_CODE_EXPIRES = 600

# https://note.qidong.name/2018/11/django-logging/
LOG_FOLDER = os.path.join(BASE_DIR, "logs")
if not os.path.isdir(LOG_FOLDER):
    os.makedirs(LOG_FOLDER, exist_ok=True)
LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "verbose": {
            "format": "{levelname} {asctime} {module} {process:d} {thread:d} {message}",
            "style": "{",
        },
        "simple": {
            "format": "{levelname} {asctime} {message}",
            "style": "{",
        },
    },
    "filters": {
        "require_debug_true": {
            "()": "django.utils.log.RequireDebugTrue",
        },
    },
    "handlers": {
        "file": {
            "level": "INFO",
            "class": "logging.FileHandler",
            "filename": os.path.join(
                LOG_FOLDER,
                time.strftime("%Y-%m-%d", time.localtime(time.time())),
            ),
            "formatter": "verbose",
        },
        "console": {
            "level": "INFO",
            "filters": ["require_debug_true"],
            "class": "logging.StreamHandler",
            "formatter": "simple",
        },
    },
    "loggers": {
        "": {
            "handlers": ["console", "file"],
            "level": os.getenv("DJANGO_LOG_LEVEL", "INFO"),
        },
        "django": {
            "handlers": ["console", "file"],
            "level": os.getenv("DJANGO_LOG_LEVEL", "INFO"),
            "propagate": False,
        },
        "django.request": {
            "handlers": ["console", "file"],
            "level": "ERROR",
            "propagate": False,
        },
    },
}

# OAuth重定向时的cookie键
JWT_COOKIE_KEY = "token"

# 二维码有效期为5分钟
QR_CODE_EXPIRE = 300

CSDN_DOWNLOADING_KEY = "csdn_downloading"
CSDN_DOWNLOADING_MAX_TIME = 300

FILE_TYPES = {
    "1": "DOC",
    "2": "XLS",
    "3": "PPT",
    "4": "DOCX",
    "5": "XLSX",
    "6": "PPTX",
    "7": "PDF",
    "8": "TXT",
    "9": "WPS",
    "12": "VSD",
    "13": "RTF",
    "15": "PPS",
    "19": "DWG",
}

TAG_SEP = "!sep!"
