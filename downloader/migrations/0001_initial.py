# Generated by Django 3.0.2 on 2020-03-23 10:38

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Advert',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('link', models.CharField(max_length=240, verbose_name='推广链接')),
                ('image', models.CharField(max_length=240, verbose_name='推广图片')),
                ('title', models.CharField(max_length=100, verbose_name='推广标题')),
            ],
            options={
                'db_table': 'advert',
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('url', models.CharField(default=None, max_length=200, null=True, unique=True, verbose_name='文章链接')),
                ('title', models.CharField(max_length=200, verbose_name='文章标题')),
                ('content', models.TextField(verbose_name='文章内容')),
                ('author', models.CharField(max_length=100, verbose_name='文章作者')),
                ('is_vip', models.BooleanField(default=False, verbose_name='VIP文章')),
                ('desc', models.CharField(max_length=240, verbose_name='文章简介')),
                ('tags', models.CharField(max_length=200, verbose_name='文章标签')),
                ('view_count', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'article',
            },
        ),
        migrations.CreateModel(
            name='BaiduAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('email', models.EmailField(max_length=254, verbose_name='联系邮箱')),
                ('cookies', models.TextField(default=None, null=True)),
                ('is_enabled', models.BooleanField(default=True, verbose_name='是否使用该账号')),
                ('vip_free_count', models.IntegerField(default=0, verbose_name='VIP免费文档使用数')),
                ('share_doc_count', models.IntegerField(default=0, verbose_name='共享文档使用数')),
                ('special_doc_count', models.IntegerField(default=0, verbose_name='VIP专享文档使用数')),
            ],
            options={
                'db_table': 'baidu_account',
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('total_amount', models.FloatField(verbose_name='总金额')),
                ('point', models.IntegerField(verbose_name='下载积分')),
                ('is_used', models.BooleanField(default=False, verbose_name='是否使用')),
                ('code', models.CharField(max_length=50, verbose_name='优惠券唯一编码')),
                ('comment', models.CharField(max_length=100, null=True, verbose_name='备注')),
            ],
            options={
                'db_table': 'coupon',
            },
        ),
        migrations.CreateModel(
            name='CsdnAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('email', models.EmailField(max_length=254, verbose_name='联系邮箱')),
                ('cookies', models.TextField(default=None, null=True)),
                ('used_count', models.IntegerField(default=0, verbose_name='使用下载数')),
                ('today_download_count', models.IntegerField(default=0, verbose_name='今日已下载数')),
                ('is_enabled', models.BooleanField(default=True, verbose_name='是否使用该账号')),
            ],
            options={
                'db_table': 'csdn_account',
            },
        ),
        migrations.CreateModel(
            name='DocerAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('cookies', models.TextField(default=None, null=True)),
                ('email', models.EmailField(max_length=254, verbose_name='联系邮箱')),
                ('used_count', models.IntegerField(default=0, verbose_name='使用下载数')),
                ('is_enabled', models.BooleanField(default=True, verbose_name='是否使用该账号')),
                ('month_used_count', models.IntegerField(default=0, verbose_name='当月已使用VIP下载数')),
            ],
            options={
                'db_table': 'docer_account',
            },
        ),
        migrations.CreateModel(
            name='DocerPreviewImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('resource_url', models.CharField(max_length=240, verbose_name='资源地址')),
                ('url', models.CharField(max_length=240, verbose_name='图片地址')),
                ('alt', models.CharField(max_length=200, verbose_name='图片解释')),
            ],
            options={
                'db_table': 'docer_preview_image',
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('url', models.CharField(default=None, max_length=200, null=True, verbose_name='资源地址')),
                ('title', models.CharField(max_length=100, verbose_name='资源标题')),
                ('filename', models.CharField(default=None, max_length=100, null=True, verbose_name='资源文件名')),
                ('desc', models.TextField(default=None, null=True, verbose_name='资源描述')),
                ('size', models.IntegerField(verbose_name='资源文件大小')),
                ('key', models.CharField(default=None, max_length=200, null=True, verbose_name='资源存储文件')),
                ('tags', models.CharField(default=None, max_length=240, null=True, verbose_name='资源标签')),
                ('download_count', models.IntegerField(default=1)),
                ('is_audited', models.SmallIntegerField(default=1, verbose_name='是否通过审核')),
                ('file_md5', models.CharField(max_length=100, verbose_name='文件的md5值')),
                ('wenku_type', models.CharField(default=None, max_length=100, null=True, verbose_name='百度文库文档类型')),
                ('zhiwang_type', models.CharField(default=None, max_length=10, null=True, verbose_name='知网文献类型(caj/pdf)')),
                ('is_docer_vip_doc', models.BooleanField(default=False, verbose_name='是否是稻壳VIP文档')),
            ],
            options={
                'db_table': 'resource',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('total_amount', models.FloatField(verbose_name='总金额')),
                ('point', models.IntegerField(verbose_name='下载积分')),
            ],
            options={
                'db_table': 'service',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('nickname', models.CharField(default=None, max_length=100, verbose_name='昵称')),
                ('phone', models.CharField(default=None, max_length=20, null=True, verbose_name='手机号')),
                ('email', models.EmailField(max_length=254, verbose_name='邮箱')),
                ('password', models.CharField(max_length=100, verbose_name='密码')),
                ('temp_password', models.CharField(default=None, max_length=100, null=True, verbose_name='修改密码时保存的临时密码')),
                ('is_active', models.BooleanField(default=False, verbose_name='是否激活')),
                ('code', models.CharField(max_length=6, verbose_name='验证码')),
                ('point', models.IntegerField(default=0, verbose_name='下载积分')),
                ('used_point', models.IntegerField(default=0, verbose_name='已使用积分')),
                ('login_device', models.TextField(default=None, null=True, verbose_name='登录设备')),
                ('login_ip', models.CharField(default=None, max_length=100, null=True, verbose_name='登录IP')),
                ('login_time', models.DateTimeField(default=None, null=True, verbose_name='登录时间')),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='ResourceComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('content', models.CharField(max_length=240)),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='downloader.Resource')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='downloader.User')),
            ],
            options={
                'db_table': 'resource_comment',
            },
        ),
        migrations.AddField(
            model_name='resource',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='downloader.User'),
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('subject', models.CharField(max_length=50, verbose_name='订单名称')),
                ('out_trade_no', models.CharField(max_length=50, unique=True, verbose_name='订单号')),
                ('total_amount', models.FloatField(verbose_name='总金额')),
                ('has_paid', models.BooleanField(default=False, verbose_name='是否支付')),
                ('pay_url', models.TextField(verbose_name='支付地址')),
                ('point', models.IntegerField(verbose_name='下载积分')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='是否被删除')),
                ('coupon', models.OneToOneField(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='downloader.Coupon', verbose_name='使用的优惠券')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='downloader.User')),
            ],
            options={
                'db_table': 'order',
            },
        ),
        migrations.CreateModel(
            name='DownloadRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='是否被删除')),
                ('download_device', models.CharField(default=None, max_length=200, null=True, verbose_name='下载资源时使用的设备')),
                ('download_ip', models.CharField(default=None, max_length=100, null=True, verbose_name='下载资源时的ip地址')),
                ('used_point', models.IntegerField(default=0, verbose_name='下载使用的积分')),
                ('account', models.EmailField(default=None, max_length=254, null=True, verbose_name='使用的会员账号')),
                ('resource', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='downloader.Resource')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='downloader.User')),
            ],
            options={
                'db_table': 'download_record',
            },
        ),
        migrations.AddField(
            model_name='coupon',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='downloader.User'),
        ),
    ]
